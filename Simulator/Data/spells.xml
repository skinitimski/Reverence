<!-- ********* SPELLS ********* -->
<spells>
    <spell>
        <name>Cure</name>
        <desc></desc>
        <cost>5</cost>
        <matp>255</matp>
        <order>0</order>
        <elements>
            <element>Restorative</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state) end
            <!--
            ICombatant er = Game.Battle.ActiveAbility.Performer;
            ICombatant ee = Game.Battle.ActiveAbility.Target[0];

            int bd = Formula.MagicalBase(er);
            int dam = bd + 110;

            // sadness
            if (ee.Sadness)
            dam = dam * 7 / 10;
            // split
            // barrier/mb
            if (ee.MBarrier)
            dam = dam / 2;
            // mpturbo
            // rnd
            dam = dam * (3841 + Game.Random.Next(256)) / 4096;
            if (dam == 0)
            dam = 1;

            dam = -dam;

            ee.AcceptDamage(er, dam);
            -->
        </action>
    </spell>
    <spell>
        <name>Cure2</name>
        <desc></desc>
        <cost>24</cost>
        <matp>255</matp>
        <order>1</order>
        <elements>
            <element>Restorative</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Cure3</name>
        <desc></desc>
        <cost>64</cost>
        <matp>255</matp>
        <order>2</order>
        <elements>
            <element>Restorative</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Poisona</name>
        <desc></desc>
        <cost>3</cost>
        <matp>255</matp>
        <order>3</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Esuna</name>
        <desc></desc>
        <cost>15</cost>
        <matp>255</matp>
        <order>4</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Resist</name>
        <desc></desc>
        <cost>120</cost>
        <matp>255</matp>
        <order>5</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Life</name>
        <desc></desc>
        <cost>34</cost>
        <matp>255</matp>
        <order>6</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Allies, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Life2</name>
        <desc></desc>
        <cost>100</cost>
        <matp>255</matp>
        <order>7</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Allies, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Regen</name>
        <desc></desc>
        <cost>30</cost>
        <matp>255</matp>
        <order>8</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Fire</name>
        <desc></desc>
        <cost>4</cost>
        <matp>100</matp>
        <order>9</order>
        <elements>
            <element>Fire</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do
            
            if state.Target[i - 1] ~= nil then Formula:MagicSpell(8, state, i) end
            
            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Fire2</name>
        <desc></desc>
        <cost>22</cost>
        <matp>100</matp>
        <order>10</order>
        <elements>
            <element>Fire</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(20, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Fire3</name>
        <desc></desc>
        <cost>52</cost>
        <matp>100</matp>
        <order>11</order>
        <elements>
            <element>Fire</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(64, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Ice</name>
        <desc></desc>
        <cost>4</cost>
        <matp>100</matp>
        <order>12</order>
        <elements>
            <element>Ice</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(8, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Ice2</name>
        <desc></desc>
        <cost>22</cost>
        <matp>100</matp>
        <order>13</order>
        <elements>
            <element>Ice</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(20, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Ice3</name>
        <desc></desc>
        <cost>52</cost>
        <matp>100</matp>
        <order>14</order>
        <elements>
            <element>Ice</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(64, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Bolt</name>
        <desc></desc>
        <cost>4</cost>
        <matp>100</matp>
        <order>15</order>
        <elements>
            <element>Lightning</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(8, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Bolt2</name>
        <desc></desc>
        <cost>22</cost>
        <matp>100</matp>
        <order>16</order>
        <elements>
            <element>Lightning</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(20, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Bolt3</name>
        <desc></desc>
        <cost>52</cost>
        <matp>100</matp>
        <order>17</order>
        <elements>
            <element>Lightning</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(64, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Quake</name>
        <desc></desc>
        <cost>6</cost>
        <matp>100</matp>
        <order>18</order>
        <elements>
            <element>Earth</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(11, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Quake2</name>
        <desc></desc>
        <cost>28</cost>
        <matp>100</matp>
        <order>19</order>
        <elements>
            <element>Earth</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(24, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Quake3</name>
        <desc></desc>
        <cost>68</cost>
        <matp>100</matp>
        <order>20</order>
        <elements>
            <element>Earth</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(70, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Bio</name>
        <desc></desc>
        <cost>8</cost>
        <matp>100</matp>
        <order>21</order>
        <elements>
            <element>Poison</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil 
            then 
            Formula:MagicSpell(10, state, i)
            state.Target[i - 1]:InflictPoison()
            end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Bio2</name>
        <desc></desc>
        <cost>36</cost>
        <matp>100</matp>
        <order>22</order>
        <elements>
            <element>Poison</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil
            then
            Formula:MagicSpell(21, state, i)
            state.Target[i - 1]:InflictPoison()
            end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Bio3</name>
        <desc></desc>
        <cost>80</cost>
        <matp>100</matp>
        <order>23</order>
        <elements>
            <element>Poison</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil
            then
            Formula:MagicSpell(68, state, i)
            state.Target[i - 1]:InflictPoison()
            end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Demi</name>
        <desc></desc>
        <cost>14</cost>
        <matp>75</matp>
        <order>24</order>
        <elements>
            <element>Gravity</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Demi2</name>
        <desc></desc>
        <cost>33</cost>
        <matp>75</matp>
        <order>25</order>
        <elements>
            <element>Gravity</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Demi3</name>
        <desc></desc>
        <cost>48</cost>
        <matp>75</matp>
        <order>26</order>
        <elements>
            <element>Gravity</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Sleepel</name>
        <desc></desc>
        <cost>8</cost>
        <matp>100</matp>
        <order>27</order>
        <elements />
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Confu</name>
        <desc></desc>
        <cost>18</cost>
        <matp>100</matp>
        <order>28</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Silence</name>
        <desc></desc>
        <cost>24</cost>
        <matp>100</matp>
        <order>29</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Mini</name>
        <desc></desc>
        <cost>10</cost>
        <matp>100</matp>
        <order>30</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Toad</name>
        <desc></desc>
        <cost>14</cost>
        <matp>100</matp>
        <order>31</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Berserk</name>
        <desc></desc>
        <cost>28</cost>
        <matp>100</matp>
        <order>32</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Haste</name>
        <desc></desc>
        <cost>18</cost>
        <matp>255</matp>
        <order>33</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Slow</name>
        <desc></desc>
        <cost>20</cost>
        <matp>255</matp>
        <order>34</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Stop</name>
        <desc></desc>
        <cost>34</cost>
        <matp>255</matp>
        <order>35</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Barrier</name>
        <desc></desc>
        <cost>16</cost>
        <matp>255</matp>
        <order>36</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>MBarrier</name>
        <desc></desc>
        <cost>24</cost>
        <matp>255</matp>
        <order>37</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Reflect</name>
        <desc></desc>
        <cost>30</cost>
        <matp>255</matp>
        <order>38</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Wall</name>
        <desc></desc>
        <cost>58</cost>
        <matp>100</matp>
        <order>39</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>DeBarrier</name>
        <desc></desc>
        <cost>12</cost>
        <matp>255</matp>
        <order>40</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>DeSpell</name>
        <desc></desc>
        <cost>20</cost>
        <matp>255</matp>
        <order>41</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Death</name>
        <desc></desc>
        <cost>30</cost>
        <matp>100</matp>
        <order>42</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar, true) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Escape</name>
        <desc></desc>
        <cost>16</cost>
        <matp>110</matp>
        <order>43</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.Self) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Remove</name>
        <desc></desc>
        <cost>99</cost>
        <matp>110</matp>
        <order>44</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Comet</name>
        <desc></desc>
        <cost>70</cost>
        <matp>100</matp>
        <order>45</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(80, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Comet2</name>
        <desc></desc>
        <cost>110</cost>
        <matp>100</matp>
        <order>46</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.NTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Freeze</name>
        <desc></desc>
        <cost>82</cost>
        <matp>100</matp>
        <order>47</order>
        <elements>
            <element>Ice</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(95, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Break</name>
        <desc></desc>
        <cost>86</cost>
        <matp>100</matp>
        <order>48</order>
        <elements>
            <element>Earth</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(100, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Tornado</name>
        <desc></desc>
        <cost>90</cost>
        <matp>100</matp>
        <order>49</order>
        <elements>
            <element>Wind</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(105, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Flare</name>
        <desc></desc>
        <cost>100</cost>
        <matp>100</matp>
        <order>50</order>
        <elements>
            <element>Fire</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = false;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(115, state, i) end

            end -- for
            end -- function
        </action>
    </spell>
    <spell>
        <name>Full Cure</name>
        <desc></desc>
        <cost>99</cost>
        <matp>255</matp>
        <order>51</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Shield</name>
        <desc></desc>
        <cost>180</cost>
        <matp>255</matp>
        <order>52</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Ultima</name>
        <desc></desc>
        <cost>130</cost>
        <matp>100</matp>
        <order>53</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action>
            function (state)
            state.NoSplit = true;
            for i = 1,state.Target.Length do

            if state.Target[i - 1] ~= nil then Formula:MagicSpell(105, state, i) end

            end -- for
            end -- function
        </action>
    </spell>

    <!-- Summon Spells -->
    <spell>
        <name>DeathBlow!!</name>
        <desc>Summon Choco/Mog</desc>
        <cost>14</cost>
        <matp>255</matp>
        <order>0</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Fat Chocobo</name>
        <desc>Summon Choco/Mog</desc>
        <cost>14</cost>
        <matp>255</matp>
        <order>0</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Diamond Dust</name>
        <desc>Summon Shiva</desc>
        <cost>32</cost>
        <matp>255</matp>
        <order>1</order>
        <elements>
            <element>Ice</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Hellfire</name>
        <desc>Summon Ifrit</desc>
        <cost>34</cost>
        <matp>255</matp>
        <order>2</order>
        <elements>
            <element>Fire</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Judgement Bolt</name>
        <desc>Summon Ramuh</desc>
        <cost>40</cost>
        <matp>255</matp>
        <order>3</order>
        <elements>
            <element>Lightning</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Anger of the Land</name>
        <desc>Summon Titan</desc>
        <cost>46</cost>
        <matp>255</matp>
        <order>4</order>
        <elements>
            <element>Earth</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Steel Bladed Sword</name>
        <desc>Summon Odin</desc>
        <cost>80</cost>
        <matp>255</matp>
        <order>5</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Gunge Lance</name>
        <desc>Summon Odin</desc>
        <cost>80</cost>
        <matp>255</matp>
        <order>5</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Tidal Wave</name>
        <desc>Summon Leviathan</desc>
        <cost>78</cost>
        <matp>255</matp>
        <order>6</order>
        <elements>
            <element>Water</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Mega Flare</name>
        <desc>Summon Bahamut</desc>
        <cost>100</cost>
        <matp>255</matp>
        <order>7</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Tetra-Disaster</name>
        <desc>Summon Kjata</desc>
        <cost>110</cost>
        <matp>255</matp>
        <order>8</order>
        <elements>
            <element>Fire</element>
            <element>Ice</element>
            <element>Lightning</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Judgement</name>
        <desc>Summon Alexander</desc>
        <cost>120</cost>
        <matp>255</matp>
        <order>9</order>
        <elements>
            <element>Holy</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Phoenix Flame</name>
        <desc>Summon Phoenix</desc>
        <cost>180</cost>
        <matp>255</matp>
        <order>10</order>
        <elements>
            <element>Fire</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Giga Flare</name>
        <desc>Summon Neo Bahamut</desc>
        <cost>140</cost>
        <matp>255</matp>
        <order>11</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Black Cauldron</name>
        <desc>Summon Hades</desc>
        <cost>150</cost>
        <matp>255</matp>
        <order>12</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Disintegration</name>
        <desc>Summon Typhon</desc>
        <cost>160</cost>
        <matp>255</matp>
        <order>13</order>
        <elements>
            <element>Fire</element>
            <element>Ice</element>
            <element>Lightning</element>
            <element>Earth</element>
        </elements>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Tera Flare</name>
        <desc>Summon Bahamut ZERO</desc>
        <cost>180</cost>
        <matp>255</matp>
        <order>14</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Ultimate End</name>
        <desc>Summon Knights of Round</desc>
        <cost>250</cost>
        <matp>255</matp>
        <order>15</order>
        <elements/>
        <dispatch></dispatch>
        <action></action>
    </spell>


    <!-- Enemy Skill Spells -->
    <spell>
        <name>Frog Song</name>
        <desc></desc>
        <cost>100</cost>
        <matp>5</matp>
        <order>1</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>L4 Suicide</name>
        <desc></desc>
        <cost>10</cost>
        <matp>255</matp>
        <order>2</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Enemies, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Magic Hammer</name>
        <desc></desc>
        <cost>3</cost>
        <matp>100</matp>
        <order>3</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>White Wind</name>
        <desc></desc>
        <cost>24</cost>
        <matp>255</matp>
        <order>4</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Big Guard</name>
        <desc></desc>
        <cost>56</cost>
        <matp>255</matp>
        <order>5</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Angel Whisper</name>
        <desc></desc>
        <cost>50</cost>
        <matp>255</matp>
        <order>6</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Dragon Force</name>
        <desc></desc>
        <cost>19</cost>
        <matp>255</matp>
        <order>7</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Death Force</name>
        <desc></desc>
        <cost>3</cost>
        <matp>255</matp>
        <order>8</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Flame Thrower</name>
        <desc></desc>
        <cost>10</cost>
        <matp>100</matp>
        <order>9</order>
        <elements>
            <element>Fire</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Laser</name>
        <desc></desc>
        <cost>16</cost>
        <matp>100</matp>
        <order>10</order>
        <elements>
            <element>Gravity</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Matra Magic</name>
        <desc></desc>
        <cost>8</cost>
        <matp>100</matp>
        <order>11</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Bad Breath</name>
        <desc></desc>
        <cost>58</cost>
        <matp>100</matp>
        <order>12</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Beta</name>
        <desc></desc>
        <cost>35</cost>
        <matp>100</matp>
        <order>13</order>
        <elements>
            <element>Fire</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Aqualung</name>
        <desc></desc>
        <cost>34</cost>
        <matp>100</matp>
        <order>14</order>
        <elements>
            <element>Water</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Trine</name>
        <desc></desc>
        <cost>20</cost>
        <matp>100</matp>
        <order>15</order>
        <elements>
            <element>Lightning</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Magic Breath</name>
        <desc></desc>
        <cost>75</cost>
        <matp>100</matp>
        <order>16</order>
        <elements>
            <element>Fire</element>
            <element>Ice</element>
            <element>Lightning</element>
        </elements>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>????</name>
        <desc></desc>
        <cost>3</cost>
        <matp>100</matp>
        <order>17</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Goblin Punch</name>
        <desc></desc>
        <cost>0</cost>
        <matp>100</matp>
        <order>18</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Chocobuckle</name>
        <desc></desc>
        <cost>3</cost>
        <matp>100</matp>
        <order>19</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>L5 Death</name>
        <desc></desc>
        <cost>22</cost>
        <matp>255</matp>
        <order>20</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Death Sentence</name>
        <desc></desc>
        <cost>10</cost>
        <matp>100</matp>
        <order>21</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Roulette</name>
        <desc></desc>
        <cost>6</cost>
        <matp>255</matp>
        <order>22</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.NTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Shadow Flare</name>
        <desc></desc>
        <cost>100</cost>
        <matp>100</matp>
        <order>23</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.OneTar) end
        </dispatch>
        <action></action>
    </spell>
    <spell>
        <name>Pandora's Box</name>
        <desc></desc>
        <cost>110</cost>
        <matp>100</matp>
        <order>24</order>
        <elements/>
        <dispatch>
            function () GetSelection(TargetGroup.Area, TargetType.AllTarNS) end
        </dispatch>
        <action></action>
    </spell>
</spells>