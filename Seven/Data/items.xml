<!-- ********* ITEMS ********* -->
<items>
    <item>
        <name>Kill</name>
        <desc>Decimates a character</desc>
        <field target="Character">
            <canUse>return true</canUse>
            <use>c.HP = 0 c.MP = 0</use>
        </field>
        <battle target="Combatant" intendedForEnemies="true">
            <use>c:InflictDeath()</use>
        </battle>
    </item>
    <item>
        <name>Potion</name>
        <desc>Restores 100 HP</desc>
        <field target="Character">
            <canUse>return not (c.Death or c.HPFull)</canUse>
            <use>c.HP = c.HP + 100</use>
        </field>
        <battle target="Combatant">
            <use>if not c.Death then c:AcceptDamage(-100) end</use>
        </battle>
    </item>
    <item>
        <name>Hi-Potion</name>
        <desc>Restores 500 HP</desc>
        <field target="Character">
            <canUse>return not (c.Death or c.HPFull)</canUse>
            <use>c.HP = c.HP + 500</use>
        </field>
        <battle target="Combatant">
            <use>if not c.Death then c:AcceptDamage(-500) end</use>
        </battle>
    </item>
    <item>
        <name>X-Potion</name>
        <desc>Restores all HP</desc>
        <field target="Character">
            <canUse>return not (c.Death or c.HPFull)</canUse>
            <use>c.HP = c.MaxHP</use>
        </field>
        <battle target="Combatant">
            <use>if not c.Death then c:AcceptDamage(-c.MaxHP) end</use>
        </battle>
    </item>
    <item>
        <name>Ether</name>
        <desc>Restores 100 MP</desc>
        <field target="Character">
            <canUse>return not (c.Death or c.MPFull)</canUse>
            <use>c.MP = c.MP + 100</use>
        </field>
        <battle target="Combatant">
            <use>if not c.Death then c:AcceptMPLoss(-100) end</use>
        </battle>
    </item>
    <item>
        <name>Turbo Ether</name>
        <desc>Restores all MP</desc>
        <field target="Character">
            <canUse>return not (c.Death or c.MPFull)</canUse>
            <use>c.MP = c.MaxMP</use>
        </field>
        <battle target="Combatant">
            <use>if not c.Death then c:AcceptMPLoss(-c.MaxMP) end</use>
        </battle>
    </item>
    <item>
        <name>Elixir</name>
        <desc>Restores all HP/MP</desc>
        <field target="Character">
            <canUse>return not (c.Death or (c.MPFull and c.HPFull))</canUse>
            <use>c.HP = c.MaxHP c.MP = c.MaxMP</use>
        </field>
        <battle target="Combatant">
            <use>if not c.Death then c:AcceptDamage(-c.MaxHP); c:AcceptMPLoss(-c.MaxMP) end</use>
        </battle>
    </item>
    <item>
        <name>Megalixir</name>
        <desc>Restores all HP/MP in party</desc>
        <field target="Party">
            <canUse>return canPartyHeal(p)</canUse>
            <use>
                for i = 0, p.Size - 1 do
                    if p[i] ~= nil and not p[i].Death 
                    then
                        p[i].HP = p[i].MaxHP  
                        p[i].MP = p[i].MaxMP
                    end
                end            
            </use>
        </field>
        <battle target="Group">
            <use>
                for i = 0, c.Count - 1 do
                    if c[i] ~= nil and not c[i].Death 
                    then
                        c[i]:AcceptDamage(-c[i].MaxHP)
                        c[i]:AcceptMPLoss(-c[i].MaxMP)
                    end
                end
            </use>
            <!--
            -->
        </battle>
    </item>
    <item>
        <name>Phoenix Down</name>
        <desc>Restores life</desc>
        <field target="Character">
            <canUse>return c.Death</canUse>
            <use>
                c:CureDeath()
                c.HP = c.MaxHP / 10
            </use>
        </field>
        <battle target="Combatant">
            <use>
                c:CureDeath()
                c.HP = c.MaxHP / 10
            </use>
        </battle>
    </item>
    <item>
        <name>Tent</name>
        <desc>Restores all HP/MP in party</desc>
        <field target="Party">
            <canUse>return canPartyHeal(p)</canUse>
            <use>
                for i = 0,2 do
                    if p[i] ~= nil and not p[i].Death 
                    then
                        p[i].HP = p[i].MaxHP  
                        p[i].MP = p[i].MaxMP
                    end
                end            
            </use>
        </field>
    </item>
    <item>
        <name>Hyper</name>
        <desc>Cures [Sadness]</desc>
        <field target="Character">
            <canUse>return not c.Death and not c.Fury</canUse>
            <use>if c.Sadness then c:CureSadness() else c:InflictFury() end</use>
        </field>
        <battle target="Combatant">
            <use>c:InflictFury()</use>
        </battle>
    </item>
    <item>
        <name>Tranquilizer</name>
        <desc>Cures [Fury]</desc>
        <field target="Character">
            <canUse>return not c.Death and not c.Sadness</canUse>
            <use>if c.Fury then c:CureFury() else c:InflictSadness() end</use>
        </field>
        <battle target="Combatant">
            <use>c:InflictSadness()</use>
        </battle>
    </item>
    <item>
        <name>Power Source</name>
        <desc>Increases Strength</desc>
        <field target="Character">
            <canUse>return true</canUse>
            <use>c.IncrementStrength()</use>
        </field>
    </item>
    <item>
        <name>Guard Source</name>
        <desc>Increases Vitality</desc>
        <field target="Character">
            <canUse>return true</canUse>
            <use>c.IncrementVitality()</use>
        </field>
    </item>
    <item>
        <name>Speed Source</name>
        <desc>Increases Dexterity</desc>
        <field target="Character">
            <canUse>return true</canUse>
            <use>c.IncrementDexterity()</use>
        </field>
    </item>
    <item>
        <name>Magic Source</name>
        <desc>Increases Magic</desc>
        <field target="Character">
            <canUse>return true</canUse>
            <use>c.IncrementMagic()</use>
        </field>
    </item>
    <item>
        <name>Mind Source</name>
        <desc>Increases Spirit</desc>
        <field target="Character">
            <canUse>return true</canUse>
            <use>c.IncrementSpirit()</use>
        </field>
    </item>
    <item>
        <name>Luck Source</name>
        <desc>Increases Luck</desc>
        <field target="Character">
            <canUse>return true</canUse>
            <use>c.IncrementLuck()</use>
        </field>
    </item>
    <item>
        <name>Loco Weed</name>
        <desc>Inflicts [Confu]</desc>
        <battle target="Combatant">
            <use>c:InflictConfusion()</use>
        </battle>
    </item>
    <item>
        <name>Remedy</name>
        <desc>Cures all abnormal status ailments</desc>
        <field target="Character">
            <canUse>return true</canUse>
            <use>c:CureFury() c:CureSadness()</use>
        </field>
    </item>
    <item>
        <name>Vagyrisk Claw</name>
        <desc>Inflicts [Petrify]</desc>
        <battle target="Combatant" intendedForEnemies="true">
            <use>c:InflictPetrify()</use>
        </battle>
    </item>
    <item>
        <name>Soft</name>
        <desc>Cures [Petrify]</desc>
        <battle target="Combatant" intendedForEnemies="true">
            <use>c:CurePetrify()</use>
        </battle>
    </item>
</items>